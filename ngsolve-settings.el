

(defun run-ngsolve ()
  (interactive)
  (let* ((filename (file-name-nondirectory buffer-file-name))
         (directory  (file-name-directory buffer-file-name)))
    (other-window 1)
    (if (get-buffer "*shx*")
        (switch-to-buffer "*shx*")
      (shx))
    (goto-char (point-max))
    (move-beginning-of-line nil)
    (if (eq (point) (point-max))
        nil
      (kill-line))
    (insert (concat "cd " directory " && ngsolve " filename))
    (shx-send-input)
    )
  )

(defun run-netgen ()
  (interactive)
  (let* ((filename (file-name-nondirectory buffer-file-name))
         (directory  (file-name-directory buffer-file-name)))
    (other-window 1)
    (if (get-buffer "*shx*")
        (switch-to-buffer "*shx*")
      (shx))
    (goto-char (point-max))
    (move-beginning-of-line nil)
    (if (eq (point) (point-max))
        nil
      (kill-line))
    (insert (concat "cd " directory " && netgen " filename))
    (shx-send-input)
    )
  )

(defun my-run-mpi()
  (interactive)
  (let* ((filename (file-name-nondirectory buffer-file-name))
         (directory  (file-name-directory buffer-file-name)))
    (other-window 1)
    (if (get-buffer "*shx*")
        (switch-to-buffer "*shx*")
      (shx))
    (goto-char (point-max))
    (move-beginning-of-line nil)
    (if (eq (point) (point-max))
        nil
      (kill-line))
    (insert (concat "cd " directory " && mpirun -np 6 python " filename))
    (shx-send-input)
    )
  )

(defun my-run-python ()
  (interactive)
  (let* ((filename (file-name-nondirectory buffer-file-name))
         (directory  (file-name-directory buffer-file-name)))
    (other-window 1)
    (if (get-buffer "*shx*")
        (switch-to-buffer "*shx*")
      (shx))
    (goto-char (point-max))
    (move-beginning-of-line nil)
    (if (eq (point) (point-max))
        nil
      (kill-line))
    (insert (concat "cd " directory " && python " filename))
    (shx-send-input)
    )
  )


(use-package python
  :bind (:map python-mode-map
              ("C-c n" . 'run-ngsolve)
              ("C-c y" . 'my-run-python)
              ("C-c m" . 'run-netgen)
              ("C-c p" . 'my-run-mpi)))

(provide 'ngsolve-settings)
